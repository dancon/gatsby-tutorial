{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.js","webpack:///./src/components/LayoutCSSIn/index.js","webpack:///./src/components/header.js"],"names":["About","render","data","this","props","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_LayoutCSSIn__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","title","_components_header__WEBPACK_IMPORTED_MODULE_2__","content","Component","query","m","module","exports","require","default","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","gatsby__WEBPACK_IMPORTED_MODULE_3__","className","css","to","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-about-js-e5e6ff53e348dcaf2c32.js","sourcesContent":["import React, { Component } from \"react\"\nimport Header from \"../components/header\"\nimport Layout from '../components/LayoutCSSIn'\nimport { graphql } from 'gatsby'\n\nexport default class About extends Component {\n  render() {\n    const { data } = this.props\n    return (\n      <Layout>\n        <h1>About { data.site.siteMetadata.title }</h1>\n        <p>\n          We're the only site running on your computer dedicated to showing the best\n          photos and videos of pandas eating lots of food.\n        </p>\n        <Header content=\"About me!\" />\n        <Header content=\"It's pretty code~\" />\n        <p>Such wow, Very React.</p>\n        <p>I’m good enough, I’m smart enough, and gosh darn it, people like me!</p>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from 'typography'\n// import bootstrapTheme from 'typography-theme-bootstrap'\n// import awtonTheme from 'typography-theme-lawton'\n// import fairyGatesTheme from 'typography-theme-fairy-gates'\nimport kirkhamTheme from 'typography-theme-kirkham'\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\n\nexport const rhythm = typography.rhythm","import React from 'react'\nimport { css } from 'react-emotion'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport { rhythm } from '../../utils/typography'\n\nexport default ({ children }) => (\n  <StaticQuery query={\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  } render={\n    data => (\n      <div className={css`\n        margin: 0 auto;\n        max-width: 700px;\n        padding: ${rhythm(2)};\n        padding-top: ${rhythm(1.5)}\n      `}>\n        <Link to=\"/\">\n          <h3 className={css`\n            margin: 0;\n            margin-bottom: ${rhythm(2)};\n            display: inline-block;\n            font-style: normal;\n          `}>{ data.site.siteMetadata.title }</h3>\n        </Link>\n        <Link to=\"/about/\" className={css`\n          float: right;\n        `}>About</Link>\n        { children }\n      </div>\n    )\n  } />\n)","import React from 'react'\n\nexport default (props) => {\n  return (\n    <h1>{ props.content }</h1>\n  )\n}"],"sourceRoot":""}