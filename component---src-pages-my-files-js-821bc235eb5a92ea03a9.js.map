{"version":3,"sources":["webpack:///./src/pages/my-files.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.js","webpack:///./src/components/LayoutCSSIn/index.js"],"names":["__webpack_exports__","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_LayoutCSSIn__WEBPACK_IMPORTED_MODULE_2__","allFile","edges","map","_ref2","index","node","relativePath","prettySize","extension","birthTime","query","m","module","exports","require","default","__webpack_require__","r","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","gatsby__WEBPACK_IMPORTED_MODULE_3__","className","css","to","site","siteMetadata","title","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-my-files-js-821bc235eb5a92ea03a9.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/LayoutCSSIn'\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <h1>My Site's Files</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>relativePath</th>\n            <th>prettySize</th>\n            <th>extension</th>\n            <th>birthTime</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.allFile.edges.map(({ node }, index) => {\n              const { relativePath, prettySize, extension, birthTime } = node\n\n              return (\n                <tr>\n                  <td>{ relativePath }</td>\n                  <td>{ prettySize }</td>\n                  <td>{ extension }</td>\n                  <td>{ birthTime }</td>\n                </tr>\n              )\n            })\n          }\n        </tbody>\n      </table>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          relativePath,\n          prettySize,\n          extension,\n          birthTime(fromNow: true)\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from 'typography'\n// import bootstrapTheme from 'typography-theme-bootstrap'\n// import awtonTheme from 'typography-theme-lawton'\n// import fairyGatesTheme from 'typography-theme-fairy-gates'\nimport kirkhamTheme from 'typography-theme-kirkham'\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\n\nexport const rhythm = typography.rhythm","import React from 'react'\nimport { css } from 'react-emotion'\nimport { Link, StaticQuery, graphql } from 'gatsby'\nimport { rhythm } from '../../utils/typography'\n\nexport default ({ children }) => (\n  <StaticQuery query={\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `\n  } render={\n    data => (\n      <div className={css`\n        margin: 0 auto;\n        max-width: 700px;\n        padding: ${rhythm(2)};\n        padding-top: ${rhythm(1.5)}\n      `}>\n        <Link to=\"/\">\n          <h3 className={css`\n            margin: 0;\n            margin-bottom: ${rhythm(2)};\n            display: inline-block;\n            font-style: normal;\n          `}>{ data.site.siteMetadata.title }</h3>\n        </Link>\n        <Link to=\"/about/\" className={css`\n          float: right;\n        `}>About</Link>\n        { children }\n      </div>\n    )\n  } />\n)"],"sourceRoot":""}